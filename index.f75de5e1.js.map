{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,4BAA4B;IAChC,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,aAAa,YAAY,CAAC,WAAW;IACrC,SAAS,IAAI,CAAC,WAAW,CAAC;IAE1B,OAAO;AACT;AAEA,MAAM,mBAAmB,CAAC,SAAS;IACjC,MAAM,eAAe;IAErB,aAAa,WAAW,GAAG;IAC3B,aAAa,SAAS,CAAC,GAAG,CAAC;AAC7B;AAEA,MAAM,eAAe,IAAI,QAAQ,CAAC,SAAS;IACzC,MAAM,cAAc,CAAC;QACnB,IAAI,EAAE,MAAM,KAAK,GAAG;YAClB,QAAQ;YACR,KAAK,mBAAmB,CAAC,SAAS;QACpC;IACF;IAEA,KAAK,gBAAgB,CAAC,SAAS;IAE/B,WAAW;QACT,OAAO,IAAI,MAAM;QACjB,KAAK,mBAAmB,CAAC,SAAS;IACpC,GAAG;AACL;AAEA,MAAM,gBAAgB,IAAI,QAAQ,CAAC;IACjC,MAAM,cAAc;QAClB,QAAQ;QACR,KAAK,mBAAmB,CAAC,SAAS;IACpC;IAEA,KAAK,gBAAgB,CAAC,SAAS;IAE/B,KAAK,gBAAgB,CAAC,eAAe,CAAC;QACpC,EAAE,cAAc;QAChB,QAAQ;QACR,KAAK,mBAAmB,CAAC,SAAS;IACpC;AACF;AAEA,MAAM,eAAe,IAAI,QAAQ,CAAC;IAChC,IAAI,cAAc;IAClB,IAAI,eAAe;IAEnB,MAAM,cAAc;QAClB,IAAI,eAAe,cAAc;YAC/B,QAAQ;YACR,KAAK,mBAAmB,CAAC,SAAS;QACpC;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,IAAI,EAAE,MAAM,KAAK,GACf,cAAc;aACT,IAAI,EAAE,MAAM,KAAK,GAAG;YACzB,EAAE,cAAc;YAChB,eAAe;QACjB;QAEA;IACF;IAEA,KAAK,gBAAgB,CAAC,SAAS;IAC/B,KAAK,gBAAgB,CAAC,eAAe;AACvC;AAEA,aAAa,IAAI,CACf,CAAC,SAAW,iBAAiB,QAAQ,YACrC,CAAC,QAAU,iBAAiB,MAAM,OAAO,EAAE;AAE7C,cAAc,IAAI,CAAC,CAAC,SAAW,iBAAiB,QAAQ;AACxD,aAAa,IAAI,CAAC,CAAC,SAAW,iBAAiB,QAAQ","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst createNotificationElement = () => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  document.body.appendChild(notification);\n\n  return notification;\n};\n\nconst showNotification = (message, type) => {\n  const notification = createNotificationElement();\n\n  notification.textContent = message;\n  notification.classList.add(type);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const handleClick = (e) => {\n    if (e.button === 0) {\n      resolve('First promise was resolved');\n      body.removeEventListener('click', handleClick);\n    }\n  };\n\n  body.addEventListener('click', handleClick);\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n    body.removeEventListener('click', handleClick);\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  const handleClick = () => {\n    resolve('Second promise was resolved');\n    body.removeEventListener('click', handleClick);\n  };\n\n  body.addEventListener('click', handleClick);\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n    body.removeEventListener('click', handleClick);\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  const checkClicks = () => {\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n      body.removeEventListener('click', handleClick);\n    }\n  };\n\n  const handleClick = (e) => {\n    if (e.button === 0) {\n      leftClicked = true;\n    } else if (e.button === 2) {\n      e.preventDefault();\n      rightClicked = true;\n    }\n\n    checkClicks();\n  };\n\n  body.addEventListener('click', handleClick);\n  body.addEventListener('contextmenu', handleClick);\n});\n\nfirstPromise.then(\n  (result) => showNotification(result, 'success'),\n  (error) => showNotification(error.message, 'error'),\n);\nsecondPromise.then((result) => showNotification(result, 'success'));\nthirdPromise.then((result) => showNotification(result, 'success'));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}